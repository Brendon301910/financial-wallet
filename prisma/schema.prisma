// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String         @id @default(uuid())
  email                String         @unique
  password             String
  wallet               Wallet?
  createdAt            DateTime       @default(now())
  transactionsSent     Transaction[]  @relation("Sender")
  transactionsReceived Transaction[]  @relation("Receiver")
  notifications        Notification[]
}

model Wallet {
  id      String  @id @default(uuid())
  userId  String  @unique
  balance Decimal @default(0)

  user User @relation(fields: [userId], references: [id])
}

model Transaction {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  amount     Decimal
  status     String
  createdAt  DateTime @default(now())

  sender       User           @relation("Sender", fields: [senderId], references: [id])
  receiver     User           @relation("Receiver", fields: [receiverId], references: [id])
  reversal     Reversal?
  Notification Notification[]
}

model Reversal {
  id            String   @id @default(uuid())
  transactionId String   @unique
  reason        String
  createdAt     DateTime @default(now())

  transaction  Transaction    @relation(fields: [transactionId], references: [id])
  Notification Notification[]
}

model Notification {
  id            String   @id @default(uuid())
  userId        String
  transactionId String? // Opcional, pode ser uma notificação geral
  reversalId    String? // Opcional, pra avisar sobre reversão
  message       String
  read          Boolean  @default(false)
  createdAt     DateTime @default(now())

  user        User         @relation(fields: [userId], references: [id])
  transaction Transaction? @relation(fields: [transactionId], references: [id])
  reversal    Reversal?    @relation(fields: [reversalId], references: [id])
}
